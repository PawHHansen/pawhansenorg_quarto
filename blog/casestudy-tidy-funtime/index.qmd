---
title: "Tidy Fun"
author: "Paw Hansen"
description: "When presenting statistical results, don't rely on the default computer output. Do this instead."
date: '2024-02-28'
image: "featured.jpg"
categories: [statistical analysis, presentation]
editor_options: 
  chunk_output_type: console
---

```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE, warning = F, message = F)
```

Sitting at a cafe feeling like doing some data analysis. So, let's have a look at a recent Tidy Tuesday dataset and see if we can make some fun out of it. 

```{r warning=F, message=F}
#| code-fold: true
#| code-summary: "Packages used in this post"

library(tidyverse)
library(broom)
library(modelsummary)
library(marginaleffects)
library(estimatr)
library(ggsci)
library(gt)

theme_set(theme_minimal(base_size = 12))

```

# Import
```{r}

data("mtcars")

mtcars <- 
  mtcars |> 
  mutate(cyl = as.factor(cyl))

```

# EDA

More cylinders, more horsepowers is bad for fuel efficiency. 

```{r}

mtcars |> 
  ggplot(aes(hp, mpg)) + 
  geom_point()

mtcars |> 
  ggplot(aes(as.factor(cyl), mpg)) + 
  geom_boxplot(aes(fill = as.factor(cyl))) +
  scale_fill_futurama()

mtcars |> 
  ggplot(aes(as.factor(cyl), mpg)) + 
  geom_jitter(aes(color = as.factor(cyl))) +
  scale_color_futurama()

```

# Model

```{r}

mod  <- 
  lm_robust(mpg ~ hp + disp + cyl, 
            data = mtcars)
  
mod_fixed <- 
  lm_robust(mpg ~ hp + disp, 
            fixed_effects = ~ cyl, 
            data = mtcars)
  

coef_names <- 
  c("hp" = "Gross horsepower",
    "disp" = "Displacement",
    "(Intercept)" = "Intercept")

modelsummary(model = list(
             "Without FE" = mod,
             "Fixed Effects" = mod_fixed), 
             fmt = 3, 
             stars = TRUE, 
             gof_map = c("rmse", "r.squared", "nobs"),
             coef_map = coef_names)

```


# Communicate

```{r}

predictions(mod, newdata = datagrid(hp = c(100, 110, 120),
                                    cyl = c(4, 6, 8)),
            by = "cyl") |>   
  gt() |> 
   fmt_number(
    decimals = 1,
    use_seps = FALSE
  ) |> 
    cols_label(
    cyl = "Cylinder"
  )


avg_comparisons(mod, variables = "cyl")

avg_slopes(mod, newdata = datagrid(hp = c(100, 110, 120),
                                    cyl = c(4, 6, 8)))
```

