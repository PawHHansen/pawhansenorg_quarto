{
  "hash": "c522a3411ef60f666bd17f3c91ffb606",
  "result": {
    "markdown": "---\ntitle: \"Dot-dot-dot: Three dotplots to stake your life on\"\ndescription: 'Celebrating the beauty of dots and points in plotting data.'\nauthor: \"Paw Hansen\"\ndate: '2023-06-09'\nimage: \"featured.jpg\"\ncategories: [statistical analysis]\neditor_options: \n  chunk_output_type: console\n---\n\n\nHere is a quick post on a few basic plots you can make with `geom_point`. The goal is simply to celebrate _the dot_ as a way of graphing data. Who knows? Maybe someday there will be a post on the line too! For all plots, we will be working with the `gapminder` data. \n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"Packages used in this post\"}\nlibrary(tidyverse)\nlibrary(broom)\nlibrary(modelsummary)\nlibrary(ggsci)\nlibrary(gapminder)\n\ntheme_set(theme_minimal())\ndata(\"gapminder\")\n```\n:::\n\n\n### Plot 1: The Cleveland dotplot \n\nTo get started, let's make a classic Cleveland dot plot. These are good for providing at quick glance of summary statistics, here the average life expectancy for each continent:  \n\n\n::: {.cell}\n\n```{.r .cell-code}\ngapminder %>%\n  group_by(continent) %>%\n  summarise(mean = mean(lifeExp, na.rm = T)) %>%\n  mutate(continent = fct_reorder(continent, mean)) %>%\n  ggplot(aes(mean, continent)) + \n  geom_point(size = 4) +\n  labs(x = \"Years\",\n       y = NULL,\n       caption = \"Source: gapminder\")\n```\n\n::: {.cell-output-display}\n![Mean life expectancy across continents](index_files/figure-html/fig-life-exp-1.png){#fig-life-exp width=672}\n:::\n:::\n\n\nOne small tweak could be to highlight one of the continents. For instance, suppose your analysis was about explaining what's going on with one particular observation. In particular, when looking at the above plot, Africa, seems to be falling behind the other continents. An easy way to highlight that would be using color: \n\n\n::: {.cell}\n\n```{.r .cell-code}\ngapminder %>%\n  group_by(continent) %>%\n  summarise(mean = mean(lifeExp, na.rm = T)) %>%\n  mutate(continent = fct_reorder(continent, mean)) %>%\n  ggplot(aes(mean, continent)) + \n  geom_point(aes(color = I(ifelse(continent == \"Africa\", \n                                  \"firebrick\", \n                                  \"black\"))), \n             size = 4) +\n  labs(x = \"Years\",\n       y = NULL, \n       caption = \"Source: gapminder\")\n```\n\n::: {.cell-output-display}\n![What's the matter with Africa? Mean life expectancy across continents](index_files/figure-html/fig-africa-1.png){#fig-africa width=672}\n:::\n:::\n\n\nThis kind of graph is en easy but powerfull way to spark initial curiosity with readers, which is a key part of [storytelling with data](https://clauswilke.com/dataviz/telling-a-story.html)\n\n### Plot 2: The dot-and-whisker\nNext up, we have the dot-and-whisker plot. Often, researchers and data analyst will report model estimates using tables. Some scholars, teasingly, call these 'BUTONs': _Big Ugly Table of Numbers_. \n\nA simple way to improve presentation is to make a dot-and-whisker plot of the model estimates and corresponding uncertainties. Let's fit a model and make a plot:\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"false\"}\n# Rescale population and GDP per capita to more meaningfull scale. \ngapminder <- \n  gapminder %>% \n  mutate(population_scaled = pop/100000000,\n         gdpPercap_scaled = gdpPercap/10000)\n\n# The fit model\ngap_model <- \n  lm(lifeExp ~ continent + year +  population_scaled + gdpPercap_scaled, \n     data = gapminder)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ngap_model %>%\n  tidy(conf.int = T) %>%\n  filter(term != \"(Intercept)\") %>%\n  mutate(term = str_replace_all(term, \n                                \"continent\", \n                                \"Continent: \"),\n         term = str_to_title(term),\n         term = fct_reorder(term, \n                            estimate)) %>%\n  ggplot(aes(estimate, \n             term, \n             xmin = conf.low, \n             xmax = conf.high)) + \n  geom_vline(xintercept = 0, \n             linetype = \"dashed\",\n             color = \"grey\") + \n  geom_pointrange() + \n  labs(y = NULL, \n       x = \"Difference in years\")\n```\n\n::: {.cell-output-display}\n![Explaining life expectancy across the world](index_files/figure-html/fig-life-exp-world-1.png){#fig-life-exp-world width=672}\n:::\n:::\n\n\nFor reference, this is what the same results would have looked like if we had used a standard regression table:\n\n\n::: {#tbl-modelsummary-lifeexp .cell tbl-cap='Explaining life expectancy'}\n\n```{.r .cell-code}\nmodelsummary(models = list(\"Life expectancy\" = gap_model), \n             fmt = fmt_significant(2),\n             stars = T,\n             gof_map = c(\"nobs\", \"rmse\",\"r.squared\"))\n```\n\n::: {.cell-output-display}\n`````{=html}\n<table style=\"NAborder-bottom: 0; width: auto !important; margin-left: auto; margin-right: auto;\" class=\"table\">\n <thead>\n  <tr>\n   <th style=\"text-align:left;\">   </th>\n   <th style=\"text-align:center;\"> Life expectancy </th>\n  </tr>\n </thead>\n<tbody>\n  <tr>\n   <td style=\"text-align:left;\"> (Intercept) </td>\n   <td style=\"text-align:center;\"> âˆ’518*** </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\">  </td>\n   <td style=\"text-align:center;\"> (20) </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> continentAmericas </td>\n   <td style=\"text-align:center;\"> 14.29*** </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\">  </td>\n   <td style=\"text-align:center;\"> (0.49) </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> continentAsia </td>\n   <td style=\"text-align:center;\"> 9.38*** </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\">  </td>\n   <td style=\"text-align:center;\"> (0.47) </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> continentEurope </td>\n   <td style=\"text-align:center;\"> 19.36*** </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\">  </td>\n   <td style=\"text-align:center;\"> (0.52) </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> continentOceania </td>\n   <td style=\"text-align:center;\"> 20.6*** </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\">  </td>\n   <td style=\"text-align:center;\"> (1.5) </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> year </td>\n   <td style=\"text-align:center;\"> 0.29*** </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\">  </td>\n   <td style=\"text-align:center;\"> (0.01) </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> population_scaled </td>\n   <td style=\"text-align:center;\"> 0.18 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\">  </td>\n   <td style=\"text-align:center;\"> (0.16) </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> gdpPercap_scaled </td>\n   <td style=\"text-align:center;\"> 3.0*** </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;box-shadow: 0px 1.5px\">  </td>\n   <td style=\"text-align:center;box-shadow: 0px 1.5px\"> (0.2) </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Num.Obs. </td>\n   <td style=\"text-align:center;\"> 1704 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> RMSE </td>\n   <td style=\"text-align:center;\"> 6.87 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> R2 </td>\n   <td style=\"text-align:center;\"> 0.717 </td>\n  </tr>\n</tbody>\n<tfoot><tr><td style=\"padding: 0; \" colspan=\"100%\">\n<sup></sup> + p &lt; 0.1, * p &lt; 0.05, ** p &lt; 0.01, *** p &lt; 0.001</td></tr></tfoot>\n</table>\n\n`````\n:::\n:::\n\n\nThe dot-and-whisker plot helps readers quickly compare the model estimates and their corresponding uncertainty. \n\n### Plot 3: The dumbell chart\n\nFinally, the _dumbell chart_ can be useful when the goal is to highlight differences, especially across groups. Let's make one to compare the change in mean life expectancy from the 1950s to the 2000s across all five continents:   \n\n\n::: {.cell}\n\n```{.r .cell-code}\ngapminder |> \n  mutate(decade = factor(year %/% 10 * 10)) |> \n  filter(decade %in% c(1950, 2000)) |> \n  group_by(continent, decade) |> \n  summarize(lifeexp = mean(lifeExp, na.rm = T)) |> \n  mutate(continent = fct_reorder(continent, lifeexp)) |> \n  ggplot(aes(lifeexp, continent, \n             group = decade)) + \n  geom_line(aes(group = continent), \n            color = \"grey80\", \n            linewidth = 1) + \n  geom_point(aes(color = continent), \n             size = 5) + \n  scale_color_brewer(type = \"qual\", palette = \"Set1\") + \n  labs(x = \"Life expectancy (years)\",\n       y = NULL,\n       caption =\"Source: gapminder\") + \n  theme(legend.position = \"none\")\n```\n\n::: {.cell-output-display}\n![Mean life expectancy in 1950s and 2000s](index_files/figure-html/fig-dumbell-1.png){#fig-dumbell width=672}\n:::\n:::\n\n\nThe graph makes it easy to see that Oceania has the highest average but Asia has seen the highest growth. This might be a useful \"Figure 1\"; illustrating a puzzle which your paper then tries to explain.  \n\n### Final thoughts: Three dotplots to stake your life on\n\nPoints or dots can be a useful way of plotting data. In this post, I have shown you three different and quite versatile plots you can use in your next analysis. \n\n### Cool! Where can I learn more?\n\n* Healy, Kieran. _Data visualization: a practical introduction_. Princeton University Press, 2018.\n",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<script src=\"../../site_libs/kePrint-0.0.1/kePrint.js\"></script>\n<link href=\"../../site_libs/lightable-0.0.1/lightable.css\" rel=\"stylesheet\" />\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}